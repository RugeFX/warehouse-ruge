generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Position {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Staff     Staff[]
  Privilege Privilege[]
}
model MenuGroup {
  id           Int      @id @default(autoincrement())
  name         String
  icon         String  
  MenuItem     MenuItem[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MenuItem {
  id           Int      @id @default(autoincrement())
  name         String
  icon         String  
  url          String  
  MenuGroupId  Int
  MenuGroup    MenuGroup @relation(fields: [MenuGroupId], references: [id])
  Privilege    Privilege[] 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Privilege {
  id           Int      @id @default(autoincrement())
  view         Int
  add          Int  
  edit         Int  
  delete       Int  
  MenuItemId   Int
  positionId   Int
  MenuItem     MenuItem @relation(fields: [MenuItemId], references: [id])
  Position     Position @relation(fields: [positionId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model Staff {
  id           Int      @id @default(autoincrement())
  positionId   Int
  name         String   @unique
  registerDate DateTime
  address      String
  phone        String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  Position     Position @relation(fields: [positionId], references: [id])
  User         User?
}

model User {
  id       Int    @id @default(autoincrement())
  username String @unique
  password String
  staffId  Int    @unique
  Staff    Staff  @relation(fields: [staffId], references: [id])
}

model RefreshToken {
  id       Int      @id @default(autoincrement())
  token    String   @unique
  expireAt DateTime
}
